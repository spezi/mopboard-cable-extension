{"remainingRequest":"/home/spezi/git/mopboard-cable-extension/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spezi/git/mopboard-cable-extension/src/components/Calculator.vue?vue&type=template&id=e835979c&","dependencies":[{"path":"/home/spezi/git/mopboard-cable-extension/src/components/Calculator.vue","mtime":1626308304781},{"path":"/home/spezi/git/mopboard-cable-extension/node_modules/cache-loader/dist/cjs.js","mtime":1625711101257},{"path":"/home/spezi/git/mopboard-cable-extension/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1625711100400},{"path":"/home/spezi/git/mopboard-cable-extension/node_modules/cache-loader/dist/cjs.js","mtime":1625711101257},{"path":"/home/spezi/git/mopboard-cable-extension/node_modules/vue-loader/lib/index.js","mtime":1625711100397}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}